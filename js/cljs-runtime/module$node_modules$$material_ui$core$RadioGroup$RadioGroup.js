shadow$provide.module$node_modules$$material_ui$core$RadioGroup$RadioGroup=function(global,require,module,exports){module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _extends2=module(require("module$node_modules$$babel$runtime$helpers$extends")),_objectWithoutProperties2=module(require("module$node_modules$$babel$runtime$helpers$objectWithoutProperties")),_react=module(require("module$node_modules$react$index"));
global=module(require("module$node_modules$prop_types$index"));var _FormGroup=module(require("module$node_modules$$material_ui$core$FormGroup$index")),_reactHelpers=require("module$node_modules$$material_ui$core$utils$reactHelpers"),_RadioGroupContext=module(require("module$node_modules$$material_ui$core$RadioGroup$RadioGroupContext"));require=_react.default.forwardRef(function(props,ref){var actions=props.actions,children=props.children,name=props.name,valueProp=props.value,onChange=props.onChange,
other=(0,_objectWithoutProperties2.default)(props,["actions","children","name","value","onChange"]),rootRef=_react.default.useRef(null),isControlled=_react.default.useRef(null!=valueProp).current,_React$useState=_react.default.useState(function(){return isControlled?null:props.defaultValue}),valueState=_React$useState[0],setValue=_React$useState[1];_react.default.useImperativeHandle(actions,function(){return{focus:function(){var input=rootRef.current.querySelector("input:not(:disabled):checked");
input||(input=rootRef.current.querySelector("input:not(:disabled)"));input&&input.focus()}}},[]);_react.default.useEffect(function(){isControlled!==(null!=valueProp)&&console.error(["Material-UI: A component is changing ".concat(isControlled?"a ":"an un","controlled RadioGroup to be ").concat(isControlled?"un":"","controlled."),"Elements should not switch from uncontrolled to controlled (or vice versa).\nDecide between using a controlled or uncontrolled RadioGroup element for the lifetime of the component.\nMore info: https://fb.me/react-controlled-components"].join("\n"))},
[valueProp,isControlled]);actions={name:name,onChange:function(event){isControlled||setValue(event.target.value);onChange&&onChange(event,event.target.value)},value:isControlled?valueProp:valueState};ref=(0,_reactHelpers.useForkRef)(ref,rootRef);return _react.default.createElement(_FormGroup.default,(0,_extends2.default)({role:"radiogroup",ref:ref},other),_react.default.createElement(_RadioGroupContext.default.Provider,{value:actions},children))});require.propTypes={actions:global.default.shape({current:global.default.object}),
children:global.default.node,defaultValue:global.default.any,name:global.default.string,onBlur:global.default.func,onChange:global.default.func,onKeyDown:global.default.func,value:global.default.any};exports.default=require}
//# sourceMappingURL=module$node_modules$$material_ui$core$RadioGroup$RadioGroup.js.map
