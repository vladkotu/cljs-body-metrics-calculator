{"version":3,"sources":["body_index_calculator/components/form.cljs"],"mappings":"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","names":["body-index-calculator.components.form/meassuring-system","value","G__51023","re-frame.core/subscribe","p1__51022#","body-index-calculator.components.radio-group/radio-group","or__4131__auto__","cljs.core/deref","G__51026","re-frame.core/dispatch","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","p__51037","map__51038","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","p1__51034#","body-index-calculator.components.form/gender","locale","ev-key","label","G__51044","G__51045","body-index-calculator.i18n/tr","G__51048","G__51049","G__51052","p__51057","map__51059","cljs.core.get.cljs$core$IFn$_invoke$arity$3","p1__51054#","body-index-calculator.components.form/input-with-dispatchers","units","error","error-text","props","body-index-calculator.components.input/input","G__51063","G__51070","G__51076","p__51081","map__51083","body-index-calculator.components.form/double-input-with-dispatchers","with-let51089","reagent.ratom/with-let-values","temp__5739__auto__","reagent.ratom/*ratom-context*","c__45709__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init51090","res__45710__auto__","local-state","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","cljs.core/first","cljs.core/second","p1__51079#","p1__51080#","state","G__51109","G__51111","G__51113","body-index-calculator.components.input/double-input","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","dispatch-change","dispatch-focus","dispatch-blur","cljs.core/last","cljs.core/select-keys","p__51118","map__51119","body-index-calculator.components.form/input-with-subscription","sub-key","with-let51124","init51125","field","G__51127","G__51129","system","G__51131","map__51132","utype","G__51136","G__51137","body-index-calculator.helpers/loc","common-props","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","G__51138","G__51139","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","body-index-calculator.components.form/inputs","body-index-calculator.components.form/i18n","path","with-let51143","init51144","G__51150","G__51151","G__51152","cljs.core/count","body-index-calculator.components.form/form","js/module$node_modules$$material_ui$core$Box$index.default","body_index_calculator.mui_theme.spacing.cljs$core$IFn$_invoke$arity$variadic","js/module$node_modules$$material_ui$icons$ArrowDownward.default","js/module$node_modules$$material_ui$core$Typography$index.default","js/module$node_modules$$material_ui$core$Divider$index.default","cljs.core.into.cljs$core$IFn$_invoke$arity$2","iter__4523__auto__","s__51159","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4521__auto__","size__4522__auto__","b__51161","cljs.core/chunk-buffer","i__51160","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__51158","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","body_index_calculator.helpers.react_key.cljs$core$IFn$_invoke$arity$variadic","cljs.core/chunk-first"],"sourcesContent":["(ns body-index-calculator.components.form\n  (:require\n   [reagent.core :as r]\n   [re-frame.core :as rf]\n   [body-index-calculator.i18n :refer [tr]]\n   [body-index-calculator.mui-theme :refer [spacing]]\n   [body-index-calculator.subscriptions :as s]\n   [body-index-calculator.helpers :refer [loc react-key]]\n   [body-index-calculator.events :as e]\n   [body-index-calculator.components.radio-group :refer [radio-group]]\n   [body-index-calculator.components.input  :refer [input double-input]]\n   [\"@material-ui/icons/ArrowDownward\" :default ArrowDownIcon]\n   [\"@material-ui/core/Box\" :default Box]\n   [\"@material-ui/core/Typography\" :default Typography]\n   [\"@material-ui/core/Divider\" :default Divider]))\n\n;; it is not used but will leave it here for a dev process\n(defn meassuring-system []\n  (let [value (rf/subscribe [::s/system])]\n    (fn []\n      [radio-group\n       {:value         (or @value \"\")\n        :name          \"system\"\n        :add-hidden?   false\n        :radio-buttons [{:label \"Metric\" :value :metric}\n                        {:label \"Imperial\" :value :imperial}]\n        :on-change     #(rf/dispatch\n                         [::e/system (keyword %)])}])))\n\n(defn gender [{:keys [locale value ev-key label]}]\n  [radio-group\n   {:value         (or value \"\")\n    :label         label\n    :name          \"gender\"\n    :add-hidden?   true\n    :radio-buttons [{:label (tr [locale] [:form.gender/male])\n                     :value :male}\n                    {:label (tr [locale] [:form.gender/female])\n                     :value :female}]\n    :on-change     #(rf/dispatch\n                     [ev-key\n                      {:visited? true\n                       :value    (keyword %)}])}])\n\n(defn input-with-dispatchers [{:keys [value\n                                      ev-key\n                                      label\n                                      units\n                                      error\n                                      error-text]\n                               :or   {error false}\n                               :as   props}]\n  [input\n   {:label      label\n    :value      (or value \"\")\n    :units      units\n    :error      error\n    :error-text error-text\n    :on-change  #(rf/dispatch\n                  [ev-key {:value %}])\n    :on-focus   #(rf/dispatch\n                  [ev-key {:visited? true :active? true}])\n    :on-blur    #(rf/dispatch\n                  [ev-key {:active? false}])}])\n\n(defn double-input-with-dispatchers [{:keys [value ev-key label units] :as props}]\n  (r/with-let [local-state (r/atom {:ft/value (first value)\n                                    :in/value (second value)})]\n    (letfn [(dispatch-change [state]\n              (rf/dispatch [ev-key {:value [(:ft/value state) (:in/value state)]}]))\n            (dispatch-focus [] (rf/dispatch [ev-key {:visited? true :active? true}]))\n            (dispatch-blur [] (rf/dispatch [ev-key {:active? false}]))]\n      [double-input\n       label\n       {:value     (or (first value) \"\")\n        :units     (second units)\n        :on-change #(do (swap! local-state assoc :ft/value %)\n                        (dispatch-change @local-state))\n        :on-focus  dispatch-focus\n        :on-blur   dispatch-blur}\n       {:value     (or (second value) \"\")\n        :units     (last units)\n        :on-change #(do (swap! local-state assoc :in/value %)\n                        (dispatch-change @local-state))\n        :on-focus  dispatch-focus\n        :on-blur   dispatch-blur}\n       (select-keys props [:error :error-text])])))\n\n(defn input-with-subscription [{:keys [sub-key ev-key label] :as props}]\n  (r/with-let [field  (rf/subscribe [sub-key])\n               locale (rf/subscribe [::s/locale])\n               system (rf/subscribe [::s/system])]\n    ;; (pprn @field)\n    (let [{:keys [value\n                  utype\n                  error-text]} @field\n          units                (tr [@locale] (loc [:system @system :units utype]))\n          common-props         (-> @field\n                                   ;; (assoc :error-text (tr [@locale] (loc error-text)))\n                                   (assoc :ev-key ev-key)\n                                   (assoc :units units)\n                                   (assoc :locale @locale)\n                                   (assoc :label (tr [@locale] [label])))]\n      (cond\n        (and (= :len utype) (= :imperial @system))\n        [double-input-with-dispatchers common-props\n         #_(merge props {:units (rest units)} common-props)]\n\n        (nil? utype)\n        [gender common-props\n         #_(merge props common-props)]\n\n        :else\n        [input-with-dispatchers (merge props {:units units} common-props)]))))\n\n(def inputs\n  [{:label   :form.gender/label\n    :sub-key ::s/gender\n    :ev-key  ::e/gender}\n\n   {:label   :form/age\n    :sub-key ::s/age\n    :ev-key  ::e/age}\n\n   {:label   :form/weight\n    :sub-key ::s/weight\n    :ev-key  ::e/weight}\n\n   {:label   :form/height\n    :sub-key ::s/height\n    :ev-key  ::e/height}\n\n   {:label   :form/waist\n    :sub-key ::s/waist\n    :ev-key  ::e/waist}\n\n   {:label   :form/hip\n    :sub-key ::s/hip\n    :ev-key  ::e/hip}])\n\n(defn i18n [path]\n  (r/with-let [locale (rf/subscribe [::s/locale])]\n    [:span (tr [@locale] (if (= 1 (count path))\n                           path\n                           (loc path)))]))\n\n(defn form []\n  [:form {:name          \"index-calculator\"\n          :no-validate   true\n          :auto-complete \"off\"}\n   ;; form header\n   [:> Box {:min-height      (spacing 6.5)\n            :display         \"flex\"\n            :flex-direction  \"row\"\n            :justify-content \"center\"\n            :align-items     \"center\"}\n    [:> Box {:mr 1.5}\n     [:> ArrowDownIcon {:font-size \"small\"}]]\n    [:> Typography {:variant \"h6\" :component \"h2\"}\n     [i18n [:form/call-to-action]]]]\n   [:> Divider]\n   ;; [meassuring-system]\n   ;; form fields\n   (into\n    [:> Box]\n    (for [props inputs]\n      [:> Box {:my 1.5 :key (react-key (:label props))}\n       [input-with-subscription props]]))])\n"]}