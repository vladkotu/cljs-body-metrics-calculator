{"version":3,"sources":["body_index_calculator/components/input.cljs"],"mappings":"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","names":["p__69478","map__69479","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core.get.cljs$core$IFn$_invoke$arity$3","p1__69477#","body-index-calculator.components.input/shared-input","on-change","on-blur","on-focus","units","id","label","error","error-text","value","input-style","js/module$node_modules$$material_ui$core$FormControl$index.default","js/module$node_modules$$material_ui$core$InputLabel$index.default","js/module$node_modules$$material_ui$core$FilledInput$index.default","or__4131__auto__","G__69487","body-index-calculator.helpers/evalue","reagent.core/as-element","js/module$node_modules$$material_ui$core$InputAdornment$index.default","js/module$node_modules$$material_ui$core$FormHelperText$index.default","body-index-calculator.components.input/input","props","body_index_calculator.helpers.react_key.cljs$core$IFn$_invoke$arity$variadic","js/module$node_modules$$material_ui$core$Grid$index.default","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","body-index-calculator.components.input/double-input","props1","props2","with-let69493","reagent.ratom/with-let-values","temp__5739__auto__","reagent.ratom/*ratom-context*","c__56559__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init69494","res__56560__auto__","active","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","reset-active","n","cljs.core/reset!","cljs.core/deref","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.update.cljs$core$IFn$_invoke$arity$3","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"],"sourcesContent":["(ns body-index-calculator.components.input\n  (:require\n   [reagent.core :as r]\n   [body-index-calculator.helpers :refer [evalue react-key]]\n   [\"@material-ui/core/FormControl\" :default FormControl]\n   [\"@material-ui/core/FormHelperText\" :default FormHelperText]\n   [\"@material-ui/core/InputLabel\" :default InputLabel]\n   [\"@material-ui/core/InputAdornment\" :default InputAdornment]\n   [\"@material-ui/core/FilledInput\" :default FilledInput]\n   [\"@material-ui/core/Grid\" :default Grid]))\n\n(defn shared-input [{:keys [on-change\n                            on-blur\n                            on-focus\n                            units\n                            id\n                            label\n                            error\n                            error-text\n                            value\n                            input-style]\n                     :or   {on-change #()\n                            on-focus  #()\n                            on-blur   #()}}]\n  [:> FormControl {:error error :style {:width \"100%\" :position \"initial\"}}\n   [:> InputLabel {:html-for id :variant \"filled\"}\n    label]\n   [:> FilledInput {:id        id\n                    :type      \"tel\"\n                    :value     (or value \"\")\n                    :on-change #(on-change (evalue %))\n                    :on-blur   #(on-blur)\n                    :on-focus  #(on-focus)\n                    :style     input-style\n                    :endAdornment\n                    (r/as-element\n                     [:> InputAdornment\n                      {:position \"end\"\n                       :style {:align-items \"baseline\"}}\n                      units])}]\n   (when error-text [:> FormHelperText error-text])])\n\n(defn input [props]\n  (let [id (react-key \"input-\" (:label props))]\n    [:> Grid {:container true :xs 12 :item true :style {:position \"relative\"}}\n     [shared-input (assoc props :id id)]]))\n\n(defn double-input [label props1 props2 error]\n  (r/with-let [active       (r/atom 1)\n               id           (react-key \"input-\" label)\n               reset-active (fn [n] (fn [on-focus]\n                                      #(do (reset! active n)\n                                           (on-focus))))]\n    [:> Grid {:container true :xs 12 :item true :style {:position \"relative\"}}\n     (let [props (-> props1\n                     (assoc :label (when (= 1 @active) label))\n                     (assoc :id (str \"1-\" id))\n                     (update :on-focus (reset-active 1))\n                     (merge error))]\n       [:> Grid {:item true :xs 6}\n        [shared-input\n         (merge props {:input-style {:border-top-right-radius 0}})]])\n     (let [props (-> props2\n                     (assoc :label (when (= 2 @active) label))\n                     (assoc :id (str \"2-\" id))\n                     (update :on-focus (reset-active 2))\n                     (assoc :error (:error error)))]\n       [:> Grid {:item true :xs 6}\n        [shared-input\n         (merge props {:input-style {:border-top-left-radius 0}})]])]))\n"]}