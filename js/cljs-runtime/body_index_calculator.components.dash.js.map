{"version":3,"sources":["body_index_calculator/components/dash.cljs"],"mappings":";;;;;;;;;;AAWA,AAAA,AAAMA;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACMC;;AAIN,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACMC;;AAIN,AAAA,AAAAC,AAAMO;AAAN,AAAA,AAAAN,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAA,AAA2BO;AAA3B,AAAAF,AAAAL,AAAA,AAAiCQ;AAAjC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACMC,AAIH,AAAA,AAAA,AAAIF,AACDZ,AACAE,AACCa,AACY,AAAA,AAAA,AAAIH,AACnBC;;AAEJ,AAAA,AAAMG;AAAN,AACE,AAAMC,AAAI,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACC,AAAAA,AAAAA;;AAAX,AACE;;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACMJ,AACCK,AAGH,AAAAC,AAAA;AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAA;;AAAA,AAAA,AAAAD,AAAAA;;AAAA,AAAA,AAAAE,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAAE;AAAA,AAAA,AAAAF,AAAAE;AAAA,AAAA,AAAA,AAAAE,AAAAJ;AAAA,AAAAK,AA23E2C,AAAAiB,AAAAtB;AA33E3CM,AAAA,AAAAC,AAAAF;AAAAG,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAI,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAJ;AAAA,AAAA,AAAAK,AAAAN,AAAAK,AAAMW;AAAN,AAAA,AAAA,AAAAT,AAAAJ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACS,AAAA,AAAa,AAAA,AAAQa,AAC3BhC,AAAoB,AAAK,AAAA,AAAM,AAAA,AAAQgC,AACnB,AAAA,AAAOA;;AAH9B,AAAA,AAAAX,AAAA;;;;AAAA;;;;;AAAA,AAAAG,AAAA,AAAAC,AAAAN,AAAA,AAAAO,AAAA,AAAAC,AAAAhB;;AAAA,AAAAa,AAAA,AAAAC,AAAAN,AAAA;;;AAAA,AAAA,AAAAS,AAAAjB,AAAMqB;AAAN,AAAA,AAAAH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAAI,AAAAnB,AACS,AAAA,AAAa,AAAA,AAAQqB,AAC3BhC,AAAoB,AAAK,AAAA,AAAM,AAAA,AAAQgC,AACnB,AAAA,AAAOA;;;AAH9B;;;;;AAAA,AAAA;;;AAAA,AAAA,AAAAtB,AAAA,AAAAqB,AAASzB","names":["body-index-calculator.components.dash/ready-icon","js/module$node_modules$$material_ui$icons$CheckCircle.default","body-index-calculator.components.dash/not-ready-icon","js/module$node_modules$$material_ui$icons$HighlightOff.default","p__69598","map__69599","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$3","cljs.core.get.cljs$core$IFn$_invoke$arity$2","body-index-calculator.components.dash/status-icon","done?","label","js/module$node_modules$$material_ui$core$Typography$index.default","js/module$node_modules$$material_ui$core$Box$index.default","body-index-calculator.components.dash/dash","res","G__69601","re-frame.core/subscribe","js/module$node_modules$$material_ui$core$Grid$index.default","iter__4523__auto__","s__69606","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4521__auto__","size__4522__auto__","cljs.core/count","b__69608","cljs.core/chunk-buffer","i__69607","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__69605","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","cljs.core/deref","x","cljs.core/chunk-first"],"sourcesContent":["(ns body-index-calculator.components.dash\n  (:require\n   [re-frame.core :as rf]\n   [body-index-calculator.subscriptions :as s]\n   [\"@material-ui/core/Box\" :default Box]\n   [\"@material-ui/core/Grid\" :default Grid]\n   [\"@material-ui/core/Paper\" :default Paper]\n   [\"@material-ui/core/Typography\" :default Typography]\n   [\"@material-ui/icons/CheckCircle\" :default CheckCircleIcon]\n   [\"@material-ui/icons/HighlightOff\" :default  HighlightOffIcon]))\n\n(defn ready-icon []\n  [:> CheckCircleIcon\n   {:color \"action\"\n    :font-size \"small\"}])\n\n(defn not-ready-icon []\n  [:> HighlightOffIcon\n   {:color \"disabled\"\n    :font-size \"small\"}])\n\n(defn status-icon [{:keys [done? label] :or {done? false}}]\n  [:> Typography {:vairant \"caption\"\n                  :component \"div\"\n                  :style   {:display     \"flex\"\n                            :align-items \"center\"}}\n   (if done?\n     [ready-icon]\n     [not-ready-icon])\n   [:> Box {:pt 0.5 :pl 0.5\n            :color (if done? \"text.primary\" \"text.disabled\")}\n    label]])\n\n(defn dash []\n  (let [res (rf/subscribe [::s/result])]\n    (fn []\n      [:> Box {:p 1}\n       [:> Grid {:container true\n                 :justify \"space-around\"\n                 :spacing 3}\n        (for [x @res]\n          ^{:key (str \"name-\" (:title x))}\n          [status-icon {:done? (not (nil? (:value x)))\n                        :label (:abbr x)}])]])))\n"]}