{"version":3,"sources":["body_index_calculator/lib/wais_hip_ratio.cljs"],"mappings":";;;;;;AAOA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAgB,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAA;AAAA,AAAA,AAAAE,AAAAF,AAAA;AAAA,AAAAA;AAAA,AAAA,AAAAE,AAAAF,AAAA;AAAA,AAAAA;AAAA,AAAA,AAAA,AAAAC,AAAAD,AAAA,AAAAE,AAAAF,AAAA,AAAA,AAAAE,AAAAF,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAGhB,AAAA,AAAAG,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AACWM;AADX,AAAAF,AAAAJ,AAAA,AACiBO;AADjB,AAEE,AAAA,AAACC,AAAc,AAAGF,AAAMC;;AAE1B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKE;AAUL,AAAA,AAAMC,AAA0BC;AAAhC,AACOA,AACAN,AACA,AAAAO,AAAA;AAAAC,AAAA;AAAAC;AAAA,AAAE,AAAAA,AAACC,AACA,AAACX,AAAIK,AAAsB,AAAA,AAASE;;;AADvC,AAAA,AAAAE,AAAAD","names":["cljs.spec.alpha/def-impl","cljs.spec.alpha/map-spec-impl","G__49553","cljs.core/map?","cljs.core/contains?","p__49597","map__49598","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","body-index-calculator.lib.wais-hip-ratio/calc-waist-hip-ratio","waist","hip","body_index_calculator.helpers.as_float.cljs$core$IFn$_invoke$arity$2","body-index-calculator.lib.wais-hip-ratio/wais-hip-ranges-table","body-index-calculator.lib.wais-hip-ratio/classify-waist-hip-ratio","person","G__49610","fexpr__49609","p1__49605#","body-index-calculator.lib.lib/classify-value-by-table-ranges"],"sourcesContent":["(ns body-index-calculator.lib.wais-hip-ratio\n  (:require\n   [cljs.spec.alpha :as s]\n   [body-index-calculator.lib.lib :as lib]\n   [body-index-calculator.helpers :as util]\n   [body-index-calculator.lib.specs :as specs]))\n\n(s/def ::person (s/keys :req-un [::specs/waist\n                                 ::specs/hip]))\n\n(defn calc-waist-hip-ratio\n  [{:keys [waist hip]}]\n  (util/as-float (/ waist hip) 2))\n\n(def wais-hip-ranges-table\n  {:male\n   [[0.5  0.9  \"Normal Weight\"]\n    [0.9  0.99 \"Overweight\"]\n    [0.99 1.9  \"Obesity\"]]\n   :female\n   [[0.5  0.8  \"Normal Weight\"]\n    [0.8  0.84 \"Overweight\"]\n    [0.84 1.9  \"Severe Obesity\"]]})\n\n(defn classify-waist-hip-ratio [person]\n  (->> person\n       calc-waist-hip-ratio\n       (#(lib/classify-value-by-table-ranges\n          (get wais-hip-ranges-table (:gender person)) %))))\n"]}