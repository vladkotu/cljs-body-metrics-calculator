{"version":3,"sources":["body_index_calculator/lib/body_mass_index.cljs"],"mappings":";;;;;;AAOA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAgB,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAA;AAAA,AAAA,AAAAE,AAAAF,AAAA;AAAA,AAAAA;AAAA,AAAA,AAAAE,AAAAF,AAAA;AAAA,AAAAA;AAAA,AAAA,AAAA,AAAAC,AAAAD,AAAA,AAAAE,AAAAF,AAAA,AAAA,AAAAE,AAAAF,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAGhB,AAAA;;;AAAA,AAAAG,AAAWS;AAAX,AAAA,AAAAR,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AACWU;AADX,AAAAN,AAAAJ,AAAA,AACkBW;AADlB,AAEE,AAAGD,AAAO,AAAAE,AAAU,AAAA,AAAGD;AAAbE,AAAA;AAAA,AAAA,AAAAD,AAAAC,AAACC;;;;AAFb,AAAApB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAW,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAgCG;AAIhC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKM;AAQL,AAAArB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAW,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAU,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACQ,AAAAT,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAER,AAAA,AAAMU,AACHC;AADH,AAEOA,AACAV,AAEA,AAAAY,AAAA,AAAAC,AAAA;AADAF,AACA,AAAA,AAAAE;;AAAAC,AAAA;AAAAC;AAAA,AAAE,AAAAA,AAACC,AACAT;;;AADH,AAAA,AAAAO,AAAAF","names":["cljs.spec.alpha/def-impl","cljs.spec.alpha/map-spec-impl","G__49660","cljs.core/map?","cljs.core/contains?","p__49668","map__49669","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.spec.alpha/fspec-impl","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4","cljs.spec.alpha/cat-impl","body-index-calculator.lib.body-mass-index/calc-body-mass-index","cljs.core/number?","weight","height","G__49671","G__49672","Math/pow","body-index-calculator.lib.body-mass-index/body-mass-ranges-table","cljs.core/any?","body-index-calculator.lib.body-mass-index/classify-body-mass-person","person","Math/floor","G__49676","G__49677","fexpr__49675","p1__49674#","body-index-calculator.lib.lib/classify-value-by-table-ranges"],"sourcesContent":["(ns body-index-calculator.lib.body-mass-index\n  (:require\n   [body-index-calculator.lib.specs :as local-specs]\n   [body-index-calculator.lib.lib :as lib]\n   [cljs.spec.alpha :as s]\n   [orchestra.core :refer-macros [defn-spec]]))\n\n(s/def ::person (s/keys :req-un [::local-specs/height\n                                 ::local-specs/weight]))\n\n(defn-spec calc-body-mass-index number?\n  [{:keys [weight height]} ::person]\n  (/ weight (Math/pow (/ height 100) 2)))\n\n(def body-mass-ranges-table\n  [[0    18.5 \"Underweight\"]\n   [18.5 25   \"Normal Weight\"]\n   [25   30   \"Overweight\"]\n   [30   35   \"Severe Obesity\"]\n   [35   40   \"Morbid Obesity\"]\n   [40   80   \"Super Obesity\"]])\n\n(s/fdef classify-body-mass-person\n  :args (s/cat :person ::person))\n\n(defn classify-body-mass-person\n  [person]\n  (->> person\n       calc-body-mass-index\n       Math/floor\n       (#(lib/classify-value-by-table-ranges\n          body-mass-ranges-table %))))\n"]}