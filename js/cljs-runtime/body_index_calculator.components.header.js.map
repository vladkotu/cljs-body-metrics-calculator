{"version":3,"sources":["body_index_calculator/components/header.cljs"],"mappings":";;;;;;;;AASA,AAAA,AAAMA;AAAN,AACE,AAAAC,AAAA,AAAAC,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAAC;AAAA,AAAA,AAAA,AAAAD,AAAA;AAAA;AAAA,AAAAE,AAAAF;AAAA,AAAA,AAAA,AAAA,AAAAF,AAAA,AAAAI;AAAA,AAAA,AAAAC;AAAA,AAAA,AAAA,AAAAC,AAAAC,AAAAC,AAAA,AAAA,AAAA;;AAAA;;AAAA;;AAAA,AAAA,AAAAR,AAAA,AAAAI;;;;AAAA,AAAAK,AAAA,AAAA,AAAAT,AAAA;AAAA,AAAAS,AAAA,AAAAT,AAAA,AAAA,AAAAA,AAAA,AAAaY,AAAM,AAAA,AAACC;AAApB,AAAA,AAAAH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AACMG,AACCC,AACFC,AAAkBJ;;AAHvB,AAGwC,AAACK,AAAML,AAAMM;;AAHrD,AAAA,AAAA,AAAA,AAIKC;;AAJL,AAI6B,AAACF,AAAML,AAAMM;;AAJ1C,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKQE;AALR,AAAA;AAAAV;;AAQF,AAAA,AAAMW;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACMC,AAAmBvB","names":["body-index-calculator.components.header/header-content","with-let50259","reagent.ratom/with-let-values","temp__5739__auto__","reagent.ratom/*ratom-context*","c__45709__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init50260","res__45710__auto__","cljs.core/deref","open?","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","js/module$node_modules$$material_ui$core$AppBar$index.default","js/module$node_modules$$material_ui$core$Toolbar$index.default","body-index-calculator.components.side-menu/side-menu","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core/not","body-index-calculator.components.side-menu/menu-button","js/module$node_modules$$material_ui$core$Typography$index.default","body-index-calculator.components.header/header","js/module$node_modules$$material_ui$core$Grid$index.default"],"sourcesContent":["(ns body-index-calculator.components.header\n  (:require\n   [body-index-calculator.components.side-menu :refer [menu-button side-menu]]\n   [\"@material-ui/core/AppBar\" :default AppBar]\n   [\"@material-ui/core/Grid\" :default Grid]\n   [\"@material-ui/core/Toolbar\" :default Toolbar]\n   [\"@material-ui/core/Typography\" :default Typography]\n   [reagent.core :as r]))\n\n(defn header-content []\n  (r/with-let [open? (r/atom false)]\n    [:> AppBar {:position \"fixed\"}\n     [:> Toolbar\n      [side-menu {:open @open? :on-close #(swap! open? not)}]\n      [menu-button {:on-click #(swap! open? not)}]\n      [:> Typography {:variant \"h5\" :component \"h1\"}\n       \"Body Metrics Calculator\"]]]))\n\n(defn header []\n  [:> Grid {:item true} [header-content]])\n"]}