{"version":3,"sources":["body_index_calculator/components/app.cljs"],"mappings":";;;;;;;;;;;;;;;;AAiBA,AAAA,AAAA,AAAAA,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAME,AAAkBI;AAAxB,AACE,AAAMC,AAAM,AAAA,AAACC;AAAb,AACE,AAAA,AAAA,AAACC,AAEC;AAAKC;AAAL,AAAQ,AAACC,AAAOJ,AAAMG;;AAAtB,AAAA;;AAFF,AAIE;AAAKE,AAAEL,AAAMK;AAAb,AACE,AAAA,AAACC;;AACD,AAAAC,AAAA,AAAAT,AAAU,AAAA,AAACsB,AAAM,AAAK,AAAWpB;AAAjCQ,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQS;AAAR,AAAA,AACE,AAACb,AAAIa;;AADP;AAAA,AAAAZ;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAC,AAAA,AAAAb,AAAAS;AAAA,AAAA,AAAAI;AAAA,AAAA,AAAAJ,AAAAI;AAAA,AAAA,AAAA,AAAAC,AAAAL;AAAA,AAAAM,AAAA,AAAAC,AAAAP;AAAA,AAAA,AAAA,AAAAQ,AAAAR;AAAAM;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAAI,AAAAV,AAAQY;AAAR,AAAA,AACE,AAACb,AAAIa;;AADP;AAAA,AAAA,AAAAD,AAAAX;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;AANJ,AASE;;AAAA,AAAO,AAAA,AAAAc,AAAKrB;AAAL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAAA,AAEwB,AAAA,AAACI,AAAOJ;;AAFhC;;AAGE,AAAA,AAAA,AAACsB,AAAWvB;;;;;;AAd3B,AAAA,AAAA,AAAMJ;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAF;;;AAAA,AAgBA,AAAA,AAAM2B;AAAN,AACE,AAAAC,AAAA,AAAAC,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAAC;AAAA,AAAA,AAAA,AAAAD,AAAA;AAAA;AAAA,AAAAE,AAAAF;AAAA,AAAA,AAAA,AAAA,AAAAF,AAAA,AAAAI;AAAA,AAAA,AAAAC;AAAA,AAAA,AAAA,AAAAC,AAAAC,AAAAC,AAAA,AAAA,AAAA;;AAAA;;AAAA;;AAAA,AAAA,AAAAR,AAAA,AAAAI;;;;AAAA,AAAAK,AAAA,AAAA,AAAAT,AAAA;AAAA,AAAAS,AAAA,AAAAT,AAAA,AAAaW,AAAM,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACC,AAAAA,AAAAA;AAApB,AAAAbmB,AAAA,AAAAjB,AAACkB,AAAMJ,AACtBK,AACCC,AACFC,AACED,AACCE,AACCC,AACFC,AAGCC,AACFD,AAGCE,AACDF,AAGCG,AACJC;AApBJ,AAAA;AAAAf","names":["var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","body-index-calculator.components.app/error-boundary","seq50359","self__4718__auto__","cljs.core/seq","comps","error","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","reagent.core/create-class","e","cljs.core/reset!","_","cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic","seq__50360","chunk__50361","count__50362","i__50363","temp__5735__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","r","clojure.string.split.cljs$core$IFn$_invoke$arity$2","cljs.core/deref","cljs.core.into.cljs$core$IFn$_invoke$arity$2","body-index-calculator.components.app/app","with-let50364","reagent.ratom/with-let-values","temp__5739__auto__","reagent.ratom/*ratom-context*","c__45709__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init50365","res__45710__auto__","theme","G__50366","re-frame.core/subscribe","body-index-calculator.components.common/with-theme","cljs.core/name","js/module$node_modules$$material_ui$core$Container$index.default","js/module$node_modules$$material_ui$core$Box$index.default","body-index-calculator.components.header/header","js/module$node_modules$$material_ui$core$Grid$index.default","js/module$node_modules$$material_ui$core$Hidden$index.default","body-index-calculator.components.common/item-box-paper","body-index-calculator.components.dash/dash","body-index-calculator.components.form/form","body-index-calculator.components.result/result-table","body-index-calculator.components.footer/footer"],"sourcesContent":["(ns body-index-calculator.components.app\n  (:require\n   [reagent.core :as r]\n   [re-frame.core :as rf]\n   [body-index-calculator.subscriptions :as s]\n   [clojure.string :refer [split]]\n   [body-index-calculator.components.header   :refer [header]]\n   [body-index-calculator.components.footer   :refer [footer]]\n   [body-index-calculator.components.form     :refer [form]]\n   [body-index-calculator.components.dash     :refer [dash]]\n   [body-index-calculator.components.result   :refer [result-table]]\n   [body-index-calculator.components.common :refer [item-box-paper with-theme]]\n   [\"@material-ui/core/Box\" :default Box]\n   [\"@material-ui/core/Container\" :default Container]\n   [\"@material-ui/core/Grid\" :default Grid]\n   [\"@material-ui/core/Hidden\" :default Hidden]))\n\n(defn error-boundary [& comps]\n  (let [error (r/atom nil)]\n    (r/create-class\n     {:get-derived-state-from-error\n      (fn [e] (reset! error e) #js {:error true})\n      :component-did-catch\n      (fn [_ error _]\n        (prn :component-did-catch)\n        (doseq [r (split (str (.-message error)) \"\\n\")]\n          (prn r)))\n      :reagent-render\n      (fn [] (if @error\n               [:div \"Something went wrong.\"\n                [:button {:on-click #(reset! error nil)} \"Try again\"]]\n               (into [:<>] comps)))})))\n\n(defn app []\n  (r/with-let [theme (rf/subscribe [::s/theme])]\n    [with-theme {:theme (name @theme)}\n     [:> Container {:fixed false}\n      [:> Box {:mb 9}\n       [header]]\n      [:> Box {:my {:xs 1 :md 2}}\n       [:> Grid {:container true :direction \"row\"}\n        [:> Hidden {:lg-up true}\n         [item-box-paper {:item  {:xs 12}\n                          :outer {:my {:xs 1 :md 2}}\n                          :inner {:p 2}}\n          [dash]]]\n        [item-box-paper {:item  {:xs 12 :md 4}\n                         :outer {:my {:xs 1 :md 2} :mr {:md 2}}\n                         :inner {:p 2}}\n         [form]]\n        [item-box-paper {:item  {:xs 12 :md 8}\n                         :outer {:my {:xs 1 :md 2} :ml {:md 2}}\n                         :inner {:p 2}}\n         [result-table]]]]]\n     [footer]]))\n"]}