shadow$provide.module$node_modules$$material_ui$styles$getStylesCreator$getStylesCreator=function(global,require,module,exports){function arrayMerge(destination,source){return source}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_typeof2=global(require("module$node_modules$$babel$runtime$helpers$typeof")),
_deepmerge=global(require("module$node_modules$deepmerge$dist$cjs")),_noopTheme=global(require("module$node_modules$$material_ui$styles$getStylesCreator$noopTheme"));exports.default=function(stylesOrCreator){var themingEnabled="function"===typeof stylesOrCreator;"object"===(0,_typeof2.default)(stylesOrCreator)||themingEnabled||console.error("Material-UI: the `styles` argument provided is invalid.\nYou need to provide a function generating the styles or a styles object.");return{create:function(theme,
name){try{var styles=themingEnabled?stylesOrCreator(theme):stylesOrCreator}catch(err){throw!0===themingEnabled&&theme===_noopTheme.default&&console.error("Material-UI: the `styles` argument provided is invalid.\nYou are providing a function without a theme in the context.\nOne of the parent elements needs to use a ThemeProvider."),err;}if(!name||!theme.overrides||!theme.overrides[name])return styles;var overrides=theme.overrides[name],stylesWithOverrides=(0,_extends2.default)({},styles);Object.keys(overrides).forEach(function(key){stylesWithOverrides[key]||
console.warn(["Material-UI: you are trying to override a style that does not exist.","Fix the `".concat(key,"` key of `theme.overrides.").concat(name,"`.")].join("\n"));stylesWithOverrides[key]=(0,_deepmerge.default)(stylesWithOverrides[key],overrides[key],{arrayMerge:arrayMerge})});return stylesWithOverrides},options:{}}}}
//# sourceMappingURL=module$node_modules$$material_ui$styles$getStylesCreator$getStylesCreator.js.map
