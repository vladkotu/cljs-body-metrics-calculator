{
"version":3,
"file":"module$node_modules$$material_ui$core$Modal$TrapFocus.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/@material-ui/core/Modal/TrapFocus.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$material_ui$core$Modal$TrapFocus\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _ownerDocument = _interopRequireDefault(require(\"../utils/ownerDocument\"));\n\nvar _reactHelpers = require(\"../utils/reactHelpers\");\n\n/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */\n\n/**\n * @ignore - internal component.\n */\nfunction TrapFocus(props) {\n  var children = props.children,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      getDoc = props.getDoc,\n      isEnabled = props.isEnabled,\n      open = props.open;\n\n  var ignoreNextEnforceFocus = _react.default.useRef();\n\n  var sentinelStart = _react.default.useRef(null);\n\n  var sentinelEnd = _react.default.useRef(null);\n\n  var nodeToRestore = _react.default.useRef();\n\n  var rootRef = _react.default.useRef(null); // can be removed once we drop support for non ref forwarding class components\n\n\n  var handleOwnRef = _react.default.useCallback(function (instance) {\n    // #StrictMode ready\n    rootRef.current = _reactDom.default.findDOMNode(instance);\n  }, []);\n\n  var handleRef = (0, _reactHelpers.useForkRef)(children.ref, handleOwnRef); // \u26a0\ufe0f You may rely on React.useMemo as a performance optimization, not as a semantic guarantee.\n  // https://reactjs.org/docs/hooks-reference.html#usememo\n\n  _react.default.useMemo(function () {\n    if (!open || typeof window === 'undefined') {\n      return;\n    }\n\n    nodeToRestore.current = getDoc().activeElement;\n  }, [open]); // eslint-disable-line react-hooks/exhaustive-deps\n\n\n  _react.default.useEffect(function () {\n    if (!open) {\n      return;\n    }\n\n    var doc = (0, _ownerDocument.default)(rootRef.current); // We might render an empty child.\n\n    if (!disableAutoFocus && rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n      if (!rootRef.current.hasAttribute('tabIndex')) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(['Material-UI: the modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".'].join('\\n'));\n        }\n\n        rootRef.current.setAttribute('tabIndex', -1);\n      }\n\n      rootRef.current.focus();\n    }\n\n    var contain = function contain() {\n      if (disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {\n        ignoreNextEnforceFocus.current = false;\n        return;\n      }\n\n      if (rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n        rootRef.current.focus();\n      }\n    };\n\n    var loopFocus = function loopFocus(event) {\n      // 9 = Tab\n      if (disableEnforceFocus || !isEnabled() || event.keyCode !== 9) {\n        return;\n      } // Make sure the next tab starts from the right place.\n\n\n      if (doc.activeElement === rootRef.current) {\n        // We need to ignore the next contain as\n        // it will try to move the focus back to the rootRef element.\n        ignoreNextEnforceFocus.current = true;\n\n        if (event.shiftKey) {\n          sentinelEnd.current.focus();\n        } else {\n          sentinelStart.current.focus();\n        }\n      }\n    };\n\n    doc.addEventListener('focus', contain, true);\n    doc.addEventListener('keydown', loopFocus, true); // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area\n    // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.\n    //\n    // The whatwg spec defines how the browser should behave but does not explicitly mention any events:\n    // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.\n\n    var interval = setInterval(function () {\n      contain();\n    }, 50);\n    return function () {\n      clearInterval(interval);\n      doc.removeEventListener('focus', contain, true);\n      doc.removeEventListener('keydown', loopFocus, true); // restoreLastFocus()\n\n      if (!disableRestoreFocus) {\n        // In IE 11 it is possible for document.activeElement to be null resulting\n        // in nodeToRestore.current being null.\n        // Not all elements in IE 11 have a focus method.\n        // Once IE 11 support is dropped the focus() call can be unconditional.\n        if (nodeToRestore.current && nodeToRestore.current.focus) {\n          nodeToRestore.current.focus();\n        }\n\n        nodeToRestore.current = null;\n      }\n    };\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open]);\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelStart,\n    \"data-test\": \"sentinelStart\"\n  }), _react.default.cloneElement(children, {\n    ref: handleRef\n  }), _react.default.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelEnd,\n    \"data-test\": \"sentinelEnd\"\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? TrapFocus.propTypes = {\n  /**\n   * A single child content element.\n   */\n  children: _propTypes.default.element.isRequired,\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: _propTypes.default.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: _propTypes.default.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   */\n  disableRestoreFocus: _propTypes.default.bool,\n\n  /**\n   * Return the document to consider.\n   * We use it to implement the restore focus between different browser documents.\n   */\n  getDoc: _propTypes.default.func.isRequired,\n\n  /**\n   * Do we still want to enforce the focus?\n   * This prop helps nesting TrapFocus elements.\n   */\n  isEnabled: _propTypes.default.func.isRequired,\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: _propTypes.default.bool.isRequired\n} : void 0;\n/*\n\nIn the future, we should be able to replace TrapFocus with:\nhttps://github.com/facebook/react/blob/master/packages/react-events/docs/FocusScope.md\n\n```jsx\nimport FocusScope from 'react-dom/FocusScope';\n\nfunction TrapFocus(props) {\n  const {\n    children\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableRestoreFocus = false,\n    open,\n  } = props;\n\n  if (!open) {\n    return children;\n  }\n\n  return (\n    <FocusScope\n      autoFocus={!disableAutoFocus}\n      contain={!disableEnforceFocus}\n      restoreFocus={!disableRestoreFocus}\n    >\n      {children}\n    </FocusScope>\n  );\n}\n```\n\n*/\n\nvar _default = TrapFocus;\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","TrapFocus","props","children","_props$disableAutoFoc","disableAutoFocus","_props$disableEnforce","disableEnforceFocus","_props$disableRestore","disableRestoreFocus","getDoc","isEnabled","open","ignoreNextEnforceFocus","_react","default","useRef","sentinelStart","sentinelEnd","nodeToRestore","rootRef","handleOwnRef","useCallback","instance","current","_reactDom","findDOMNode","handleRef","_reactHelpers","useForkRef","ref","useMemo","window","activeElement","useEffect","doc","_ownerDocument","contains","hasAttribute","console","error","setAttribute","focus","contain","loopFocus","event","keyCode","shiftKey","addEventListener","interval","setInterval","clearInterval","removeEventListener","createElement","Fragment","tabIndex","cloneElement","_interopRequireDefault","Object","defineProperty","value","_propTypes","propTypes","element","isRequired","bool","func"]
}
