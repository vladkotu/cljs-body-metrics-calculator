{"version":3,"sources":["body_index_calculator/lib/lean_body_mass.cljs"],"mappings":"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","names":["cljs.spec.alpha/def-impl","cljs.spec.alpha/map-spec-impl","G__49688","cljs.core/map?","cljs.core/contains?","body-index-calculator.lib.lean-body-mass/lean-body-mass-dispatcher","person","method","body-index-calculator.lib.body-mass-index/calc-body-mass-index","js/body-index-calculator","js/body-index-calculator.lib","js/body-index-calculator.lib.lean-body-mass","js/body-index-calculator.lib.lean-body-mass.calc-lean-body-mass","method-table__4613__auto__","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","prefer-table__4614__auto__","method-cache__4615__auto__","cached-hierarchy__4616__auto__","hierarchy__4617__auto__","cljs.core.get.cljs$core$IFn$_invoke$arity$3","fexpr__49714","cljs.core/MultiFn","cljs.core.symbol.cljs$core$IFn$_invoke$arity$2","body-index-calculator.lib.lean-body-mass/calc-lean-body-mass","p__49718","map__49719","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","weight","height","p__49732","map__49733","p__49735","map__49736","p__49738","map__49739","_"],"sourcesContent":["(ns body-index-calculator.lib.lean-body-mass\n  (:require\n   [body-index-calculator.lib.specs :as local]\n   [cljs.spec.alpha :as s]\n   [body-index-calculator.lib.body-mass-index :refer [calc-body-mass-index]]))\n\n(s/def ::person (s/keys :req-un [::local/height\n                                 ::local/weight\n                                 ::local/gender]))\n\n(defn lean-body-mass-dispatcher [person]\n  (let [method (if (>= (calc-body-mass-index person) 35) :boer :hume)]\n    [method (:gender person)]))\n\n(defmulti calc-lean-body-mass #'lean-body-mass-dispatcher)\n\n(defmethod calc-lean-body-mass\n  [:boer :male]\n  [{:keys [weight height]}]\n  (- (+ (* 0.407 weight)\n        (* 0.267 height))\n     19.2))\n\n(defmethod calc-lean-body-mass\n  [:boer :female]\n  [{:keys [weight height]}]\n  (- (+ (* 0.252 weight)\n        (* 0.473 height))\n     48.3))\n\n(defmethod calc-lean-body-mass\n  [:hume :male]\n  [{:keys [weight height]}]\n  (- (+ (* 0.32810 weight)\n        (* 0.33929 height))\n     40.5336))\n\n(defmethod calc-lean-body-mass\n  [:hume :female]\n  [{:keys [weight height]}]\n  (- (+ (* 0.29569 weight)\n        (* 0.41813 height))\n     43.2933))\n\n(defmethod calc-lean-body-mass\n  :default\n  [_]\n  \"N/A\")\n"]}