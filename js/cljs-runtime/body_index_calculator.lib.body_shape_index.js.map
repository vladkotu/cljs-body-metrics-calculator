{"version":3,"sources":["body_index_calculator/lib/body_shape_index.cljs"],"mappings":";;;;;;AAOA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAgB,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAA;AAAA,AAAA,AAAAE,AAAAF,AAAA;AAAA,AAAAA;AAAA,AAAA,AAAAE,AAAAF,AAAA;AAAA,AAAAA;AAAA,AAAA,AAAAE,AAAAF,AAAA;AAAA,AAAAA;AAAA,AAAA,AAAAE,AAAAF,AAAA;AAAA,AAAAA;AAAA,AAAA,AAAAE,AAAAF,AAAA;AAAA,AAAAA;AAAA,AAAA,AAAA,AAAAC,AAAAD,AAAA,AAAAE,AAAAF,AAAA,AAAA,AAAAE,AAAAF,AAAA,AAAA,AAAAE,AAAAF,AAAA,AAAA,AAAAE,AAAAF,AAAA,AAAA,AAAAE,AAAAF,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAMhB,AAAA,AAAAG,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AAAiDQ;AAAjD,AAAAJ,AAAAJ,AAAA,AAA+BM;AAA/B,AAAAF,AAAAJ,AAAA,AAAqCO;AAArC,AACE,AAAME,AAAI,AAACC,AAAqBF;AAAhC,AACE,AAAG,AAAA,AAAGF,AACH,AAAG,AAAAK,AAAUF;AAAVG,AAAc,AAAA,AAAA;AAAd,AAAA,AAAAD,AAAAC,AAACC;AACD,AAAAC,AAAU,AAAA,AAAGP;AAAbQ,AAAyB,AAAA,AAAA;AAAzB,AAAA,AAAAD,AAAAC,AAACF;;;AAEX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKG;AAML;;;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC;AAIL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC;AAEL,AAAA,AAAA,AAAA,AAAKC,AAA2BF,AACEC;AAElC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKE;AAOL,AAAA,AAAAC,AAAME;AAAN,AAAA,AAAAD,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAArB,AAAA,AAAAqB,AAAA,AAAA,AAAA,AAAA,AAAApB,AAAAC,AAAAmB,AAAAA;AAAAA,AAC2Bd;AAD3B,AAAAJ,AAAAkB,AAAA,AACWE;AADX,AAAApB,AAAAkB,AAAA,AACeG;AADf,AAEE,AAAMG,AAAK,AAACvB,AAAgBG;AACtBqB,AAAO,AAACzB,AAAIe,AAAoBM;AADtCC,AAE4B,AAACO,AAAM,AAAA,AAACE;AAADD;AAAA,AAAS,AAACE,AAAEZ,AAAI,AAAAU,AAACD;;AAAUJ;AAF9D,AAAAF,AAAAD,AAAA,AAAA,AAEOI;AAFP,AAAAH,AAAAD,AAAA,AAAA,AAESK;AAFT,AAAAJ,AAAAD,AAAA,AAAA,AAEmBM;AAFnB,AAGE,AAAG,AAAGJ,AAAKG,AACRC;;AAEP,AAAA,AAAMK,AACH7B;AADH,AAEOA,AACAe,AACA,AAAAe,AAAA;AAAAC,AAAA;AAAAC;AAAA,AAAE,AAAAA,AAACC,AACArB;;;AADH,AAAA,AAAAmB,AAAAD","names":["cljs.spec.alpha/def-impl","cljs.spec.alpha/map-spec-impl","G__49686","cljs.core/map?","cljs.core/contains?","p__49721","map__49722","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","body-index-calculator.lib.body-shape-index/calc-body-shape","waist","height","person","bmi","body-index-calculator.lib.body-mass-index/calc-body-mass-index","G__49724","G__49725","Math/pow","G__49726","G__49727","body-index-calculator.lib.body-shape-index/tpetson","body-index-calculator.lib.body-shape-index/male-age-bsi","body-index-calculator.lib.body-shape-index/female-age-bsi","body-index-calculator.lib.body-shape-index/absi-z-score-ranges","body-index-calculator.lib.body-shape-index/absi-mortality-zones","p__49742","map__49743","body-index-calculator.lib.body-shape-index/calc-body-shape-z-score","age","gender","vec__49745","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","absi","scores","_","absi-mean","absi-sd","cljs.core/first","p1__49741#","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","body-index-calculator.lib.body-shape-index/classify-body-shape-person","G__49750","fexpr__49749","p1__49748#","body-index-calculator.lib.lib/classify-value-by-table-ranges"],"sourcesContent":["(ns body-index-calculator.lib.body-shape-index\n  (:require\n   [cljs.spec.alpha :as s]\n   [body-index-calculator.lib.specs :as specs]\n   [body-index-calculator.lib.lib :as lib]\n   [body-index-calculator.lib.body-mass-index  :refer [calc-body-mass-index]]))\n\n(s/def ::person (s/keys :req-un [::specs/height\n                                 ::specs/weight\n                                 ::specs/age\n                                 ::specs/gender\n                                 ::specs/waist]))\n\n(defn calc-body-shape [{:keys [waist height] :as person}]\n  (let [bmi (calc-body-mass-index person)]\n    (/ (/ waist 100)\n       (* (Math/pow bmi (/ 2 3))\n          (Math/pow (/ height 100) (/ 1 2))))))\n\n(def tpetson {:weight 81\n              :height 179\n              :age 37\n              :waist 80\n              :gender :male})\n\n(def male-age-bsi\n  \"Age| mean | standard deviation\"\n  [[2\t0.07778\t0.00312] [3\t0.07931\t0.00283] [4\t0.07932\t0.00300] [5\t0.08009\t0.00335] [6\t0.07989\t0.00362] [7\t0.07968\t0.00341] [8\t0.08063\t0.00415] [9\t0.08025\t0.00423] [10\t0.07969\t0.00408] [11\t0.07964\t0.00442] [12\t0.07953\t0.00438] [13\t0.07807\t0.00434] [14\t0.07712\t0.00436] [15\t0.07647\t0.00415] [16\t0.07583\t0.00379] [17\t0.07625\t0.00376] [18\t0.07665\t0.00361] [19\t0.07665\t0.00393] [20\t0.07715\t0.00410] [21\t0.07754\t0.00370] [22\t0.07861\t0.00452] [23\t0.07839\t0.00364] [24\t0.07794\t0.00363] [25\t0.07880\t0.00354] [26\t0.07895\t0.00381] [27\t0.07936\t0.00402] [28\t0.07999\t0.00387] [29\t0.07944\t0.00381] [30\t0.07949\t0.00370] [31\t0.07890\t0.00317] [32\t0.07922\t0.00374] [33\t0.08010\t0.00408] [34\t0.07977\t0.00367] [35\t0.08039\t0.00358] [36\t0.07966\t0.00397] [37\t0.07999\t0.00381] [38\t0.08031\t0.00367] [39\t0.08114\t0.00363] [40\t0.08089\t0.00354] [41\t0.08127\t0.00335] [42\t0.08122\t0.00347] [43\t0.08084\t0.00339] [44\t0.08110\t0.00327] [45\t0.08140\t0.00332] [46\t0.08272\t0.00426] [47\t0.08176\t0.00306] [48\t0.08119\t0.00323] [49\t0.08272\t0.00400] [50\t0.08322\t0.00333] [51\t0.08261\t0.00385] [52\t0.08281\t0.00360] [53\t0.08272\t0.00399] [54\t0.08324\t0.00356] [55\t0.08388\t0.00406] [56\t0.08321\t0.00386] [57\t0.08529\t0.00393] [58\t0.08374\t0.00344] [59\t0.08343\t0.00354] [60\t0.08392\t0.00354] [61\t0.08487\t0.00354] [62\t0.08455\t0.00348] [63\t0.08513\t0.00352] [64\t0.08489\t0.00275] [65\t0.08547\t0.00343] [66\t0.08583\t0.00343] [67\t0.08518\t0.00324] [68\t0.08565\t0.00298] [69\t0.08633\t0.00382] [70\t0.08534\t0.00387] [71\t0.08603\t0.00356] [72\t0.08635\t0.00364] [73\t0.08605\t0.00325] [74\t0.08648\t0.00387] [75\t0.08713\t0.00363] [76\t0.08671\t0.00313] [77\t0.08691\t0.00348] [78\t0.08592\t0.00383] [79\t0.08745\t0.00361] [80\t0.08759\t0.00384] [81\t0.08714\t0.00395] [82\t0.08713\t0.00370] [83\t0.08714\t0.00342] [84\t0.08763\t0.00385] [85\t0.08811\t0.00356]])\n\n(def female-age-bsi [[2\t0.07922\t0.0031] [3\t0.08000\t0.0030] [4\t0.08045\t0.0028] [5\t0.08085\t0.0032] [6\t0.08006\t0.0033] [7\t0.08013\t0.0033] [8\t0.08039\t0.0038] [9\t0.08016\t0.0037] [10\t0.07914\t0.0037] [11\t0.07934\t0.0040] [12\t0.07825\t0.0040] [13\t0.07807\t0.0043] [14\t0.07762\t0.0044] [15\t0.07701\t0.0039] [16\t0.07739\t0.0039] [17\t0.07714\t0.0039] [18\t0.07705\t0.0041] [19\t0.07743\t0.0041] [20\t0.07712\t0.0046] [21\t0.07786\t0.0041] [22\t0.07728\t0.0043] [23\t0.07726\t0.0046] [24\t0.07771\t0.0049] [25\t0.07699\t0.0040] [26\t0.07719\t0.0054] [27\t0.07756\t0.0045] [28\t0.07772\t0.0046] [29\t0.07744\t0.0040] [30\t0.07703\t0.0042] [31\t0.07714\t0.0047] [32\t0.07738\t0.0048] [33\t0.07786\t0.0047] [34\t0.07779\t0.0045] [35\t0.07756\t0.0045] [36\t0.07854\t0.0042] [37\t0.07815\t0.0039] [38\t0.07861\t0.0050] [39\t0.07779\t0.0048] [40\t0.07790\t0.0046] [41\t0.07892\t0.0040] [42\t0.07833\t0.0046] [43\t0.07882\t0.0049] [44\t0.07774\t0.0049] [45\t0.07860\t0.0046] [46\t0.07900\t0.0038] [47\t0.07916\t0.0047] [48\t0.07888\t0.0054] [49\t0.07978\t0.0046] [50\t0.07894\t0.0050] [51\t0.08039\t0.0043] [52\t0.08068\t0.0047] [53\t0.07941\t0.0042] [54\t0.08054\t0.0054] [55\t0.07872\t0.0049] [56\t0.08000\t0.0056] [57\t0.08025\t0.0050] [58\t0.08204\t0.0049] [59\t0.08038\t0.0048] [60\t0.08094\t0.0051] [61\t0.08183\t0.0047] [62\t0.08146\t0.0044] [63\t0.08226\t0.0047] [64\t0.08120\t0.0055] [65\t0.08148\t0.0060] [66\t0.08148\t0.0056] [67\t0.08283\t0.0048] [68\t0.08228\t0.0054] [69\t0.08209\t0.0052] [70\t0.08316\t0.0048] [71\t0.08394\t0.0050] [72\t0.08246\t0.0056] [73\t0.08495\t0.0049] [74\t0.08342\t0.0044] [75\t0.08276\t0.0044] [76\t0.08464\t0.0050] [77\t0.08539\t0.0050] [78\t0.08332\t0.0061] [79\t0.08376\t0.0058] [80\t0.08543\t0.0059] [81\t0.08406\t0.0056] [82\t0.08355\t0.0064] [83\t0.08542\t0.0061] [84\t0.08407\t0.0048] [85\t0.08533\t0.0052]])\n\n(def absi-z-score-ranges {:male male-age-bsi\n                          :female female-age-bsi})\n\n(def absi-mortality-zones\n  [[-100    -0.868 \"Very Low\"]\n   [-0.868  -0.272 \"Low\"]\n   [-0.272  0.229  \"Average\"]\n   [0.229   0.798  \"High\"]\n   [0.798   100    \"Very High\"]])\n\n(defn calc-body-shape-z-score\n  [{:keys [age gender] :as person}]\n  (let [absi (calc-body-shape person)\n        scores (get absi-z-score-ranges gender)\n        [_ absi-mean absi-sd] (first (filter #(= age (first %)) scores))]\n    (/ (- absi absi-mean)\n       absi-sd)))\n\n(defn classify-body-shape-person\n  [person]\n  (->> person\n       calc-body-shape-z-score\n       (#(lib/classify-value-by-table-ranges\n          absi-mortality-zones\n          %))))\n"]}